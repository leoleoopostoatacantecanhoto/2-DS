let ball;
        let leftPaddle;
        let rightPaddle;

        function setup() {
            createCanvas(800, 400);
            ball = new Ball();
            leftPaddle = new Paddle(true);
            rightPaddle = new Paddle(false);
        }

        function draw() {
            background(0);
            ball.update();
            ball.show();
            ball.checkPaddle(leftPaddle);
            ball.checkPaddle(rightPaddle);
            leftPaddle.show();
            rightPaddle.show();
            leftPaddle.update();
            rightPaddle.update();
        }

        function keyPressed() {
            if (key === 'W') {
                leftPaddle.move(-10);
            } else if (key === 'S') {
                leftPaddle.move(10);
            }
            if (keyCode === UP_ARROW) {
                rightPaddle.move(-10);
            } else if (keyCode === DOWN_ARROW) {
                rightPaddle.move(10);
            }
        }

        function keyReleased() {
            if (key === 'W' || key === 'S') {
                leftPaddle.move(0);
            }
            if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {
                rightPaddle.move(0);
            }
        }

        class Ball {
            constructor() {
                this.x = width / 2;
                this.y = height / 2;
                this.size = 20;
                this.xSpeed = 5;
                this.ySpeed = 3;
            }

            update() {
                this.x += this.xSpeed;
                this.y += this.ySpeed;

                if (this.y < 0 || this.y > height) {
                    this.ySpeed *= -1;
                }

                if (this.x < 0 || this.x > width) {
                    this.reset();
                }
            }

            reset() {
                this.x = width / 2;
                this.y = height / 2;
                this.xSpeed = random() > 0.5 ? 5 : -5;
                this.ySpeed = random(-3, 3);
            }

            show() {
                fill(255);
                ellipse(this.x, this.y, this.size);
            }

            checkPaddle(paddle) {
                if (this.x - this.size / 2 < paddle.x + paddle.w && 
                    this.x + this.size / 2 > paddle.x && 
                    this.y - this.size / 2 < paddle.y + paddle.h && 
                    this.y + this.size / 2 > paddle.y) {
                    this.xSpeed *= -1;
                }
            }
        }

        class Paddle {
            constructor(isLeft) {
                this.w = 10;
                this.h = 100;
                this.x = isLeft ? 0 : width - this.w;
                this.y = height / 2 - this.h / 2;
                this.yChange = 0;
            }

            move(step) {
                this.yChange = step;
            }let ball;
        let leftPaddle;
        let rightPaddle;

        function setup() {
            createCanvas(800, 400);
            ball = new Ball();
            leftPaddle = new Paddle(true);
            rightPaddle = new Paddle(false);
        }

        function draw() {
            background(0);
            ball.update();
            ball.show();
            ball.checkPaddle(leftPaddle);
            ball.checkPaddle(rightPaddle);
            leftPaddle.show();
            rightPaddle.show();
            leftPaddle.update();
            rightPaddle.update();
        }

        function keyPressed() {
            if (key === 'W') {
                leftPaddle.move(-10);
            } else if (key === 'S') {
                leftPaddle.move(10);
            }
            if (keyCode === UP_ARROW) {
                rightPaddle.move(-10);
            } else if (keyCode === DOWN_ARROW) {
                rightPaddle.move(10);
            }
        }

        function keyReleased() {
            if (key === 'W' || key === 'S') {
                leftPaddle.move(0);
            }
            if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {
                rightPaddle.move(0);
            }
        }

        class Ball {
            constructor() {
                this.x = width / 2;
                this.y = height / 2;
                this.size = 20;
                this.xSpeed = 5;
                this.ySpeed = 3;
            }

            update() {
                this.x += this.xSpeed;
                this.y += this.ySpeed;

                if (this.y < 0 || this.y > height) {
                    this.ySpeed *= -1;
                }

                if (this.x < 0 || this.x > width) {
                    this.reset();
                }
            }

            reset() {
                this.x = width / 2;
                this.y = height / 2;
                this.xSpeed = random() > 0.5 ? 5 : -5;
                this.ySpeed = random(-3, 3);
            }

            show() {
                fill(255);
                ellipse(this.x, this.y, this.size);
            }

            checkPaddle(paddle) {
                if (this.x - this.size / 2 < paddle.x + paddle.w && 
                    this.x + this.size / 2 > paddle.x && 
                    this.y - this.size / 2 < paddle.y + paddle.h && 
                    this.y + this.size / 2 > paddle.y) {
                    this.xSpeed *= -1;
                }
            }
        }

        class Paddle {
            constructor(isLeft) {
                this.w = 10;

            update() {
                this.y += this.yChange;
                this.y = constrain(this.y, 0, height - this.h);
            }

            show() {
                fill(255);
                rect(this.x, this.y, this.w, this.h);
            }
        } 
